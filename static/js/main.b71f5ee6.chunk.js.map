{"version":3,"sources":["svg sync nonrecursive //.(png|jpe?g|svg)$","svg/alb.svg","svg/apig.svg","svg/ddb.svg","svg/eventbridge.png","svg/icon-check.svg","svg/kinesis.svg","svg/logo.svg","svg/s3.svg","svg/sns.svg","svg/sqs.svg","api/services sync nonrecursive //.(html)$","api/services/alb.html","api/services/apig.html","api/services/eventbridge.html","api/services/kinesis.html","api/services/kinesisEnhanced.html","api/services/s3.html","api/services/sns.html","api/services/sqs.html","components/Question.js","api/quizQuestions.js","components/AnswerOption.js","components/Quiz.js","components/Result.js","App.js","serviceWorker.js","index.js"],"names":["map","./alb.svg","./apig.svg","./ddb.svg","./eventbridge.png","./icon-check.svg","./kinesis.svg","./logo.svg","./s3.svg","./sns.svg","./sqs.svg","webpackContext","req","id","webpackContextResolve","__webpack_require__","e","Error","code","keys","Object","resolve","module","exports","p","./alb.html","./apig.html","./eventbridge.html","./kinesis.html","./kinesisEnhanced.html","./s3.html","./sns.html","./sqs.html","require","quizQuestions","strictOrdering","question","description","answers","content","next","manySubscribersKinesis","bigData","publicClients","manySubscribers","publicIngress","endKinesis","icon","endKinesisEnhancedFanout","endS3","endAPIGateway","endALB","endSNS","endEventBridge","endSQS","icons","reduce","acc","replace","Question","props","className","react_default","a","createElement","style","display","verticalAlign","marginRight","width","height","src","alt","AnswerOption","type","name","checked","answer","value","disabled","onChange","onAnswerSelected","htmlFor","answerContent","services","importAll","Quiz","react_transition_group","component","transitionName","transitionEnterTimeout","transitionLeaveTimeout","transitionAppear","transitionAppearTimeout","key","questionId","components_Question","header","dangerouslySetInnerHTML","__html","answerOptions","components_AnswerOption","Result","quizResult","App","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","result","handleAnswerSelected","bind","assertThisInitialized","setState","event","_this2","console","log","currentTarget","setUserAnswer","setTimeout","setNextQuestion","answersCount","answersCountKeys","answersCountValues","maxAnswerCount","Math","max","apply","filter","length","components_Quiz","questionTotal","components_Result","renderResult","renderQuiz","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.b71f5ee6.chunk.js","sourcesContent":["var map = {\n\t\"./alb.svg\": 34,\n\t\"./apig.svg\": 35,\n\t\"./ddb.svg\": 36,\n\t\"./eventbridge.png\": 37,\n\t\"./icon-check.svg\": 38,\n\t\"./kinesis.svg\": 39,\n\t\"./logo.svg\": 40,\n\t\"./s3.svg\": 41,\n\t\"./sns.svg\": 42,\n\t\"./sqs.svg\": 43\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) { // check for number or string\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn id;\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 33;","module.exports = __webpack_public_path__ + \"static/media/alb.6ca4bb0e.svg\";","module.exports = __webpack_public_path__ + \"static/media/apig.da7020b9.svg\";","module.exports = __webpack_public_path__ + \"static/media/ddb.daebc001.svg\";","module.exports = __webpack_public_path__ + \"static/media/eventbridge.0ac0b196.png\";","module.exports = __webpack_public_path__ + \"static/media/icon-check.4cffa739.svg\";","module.exports = __webpack_public_path__ + \"static/media/kinesis.ecf8866f.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo.84287d09.svg\";","module.exports = __webpack_public_path__ + \"static/media/s3.119552e8.svg\";","module.exports = __webpack_public_path__ + \"static/media/sns.9d18d924.svg\";","module.exports = __webpack_public_path__ + \"static/media/sqs.36a365aa.svg\";","var map = {\n\t\"./alb.html\": 45,\n\t\"./apig.html\": 46,\n\t\"./eventbridge.html\": 47,\n\t\"./kinesis.html\": 48,\n\t\"./kinesisEnhanced.html\": 49,\n\t\"./s3.html\": 50,\n\t\"./sns.html\": 51,\n\t\"./sqs.html\": 52\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) { // check for number or string\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn id;\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 44;","module.exports = \"<p>\\n    Application Load Balancer is an interesting integration for a couple reasons. The eent structure is similar similar to the AWS_PROXY integration in API Gateway. Passing through headers, query string params, etc, and returning the response in a JSON format that is parsed to an HTTP response.\\n</p>\\n\\n<p>\\n    One of the most attractive benefits of using ALB over API Gateway is strictly fanancial benefit. Since you pay fractional amounts per request, at high scale you can save a non-trivial amount of money.\\n</p>\\n\\n<p>\\n    Another use case of ALB is to slowly migrate endpoints route by route of an application over from server based systems to Lambda based. These changes are completely invisible to your clients as they happen.\\n</p>\\n\\n<h3>Key Info & Limits</h3>\\n\\n<ul>\\n    <li>Lambda function must be in same account</li>\\n    <li>1MB max request / response payloads</li>\\n    <li>WebSockets not Supported</li>\\n</ul>\";","module.exports = \"<p>\\n    If you are building an API for others for frontend applications, or others (third parties) to consume, Amazon API Gateway is the defacto choice within the AWS ecosystem. These days API Gateway even offers real-time communication via WebSocket support!\\n</p>\\n\\n<p>\\n    API Gateway can meet a broad range of requirements across authorization, thottling & rate limit plans, mapping and translation of requests from legacy APIs to a modern destination and format and more.\\n</p>\\n\\n<h3>Key Info & Limits</h3>\\n\\n<ul>\\n    <li>Soft limit of 10,000 requests / sec</li>\\n    <li>29 second response timeout (your lambda must respond within the time frame)</li>\\n    <li>300 routes / API</li>\\n    <li>10MB payload limit</li>\\n</ul>\\n\";","module.exports = \"<p>\\n    Amazon EventBridge (previously CloudWatch Events) is the new kid on the block and is great for serving as the communication fabric of your organization. It offers tremendous capabilities with filtering, and can send to many different destinations, <i>including directly to other AWS Accounts Event Buses.</i>\\n</p>\\n\\n<p>\\n    You can learn more about <a href=\\\"https://www.trek10.com/blog/amazon-eventbridge/\\\" target=\\\"_blank\\\">why EventBridge is awesome from Trek10</a>.\\n</p>\\n\\n<h3>Key Info & Limits</h3>\\n\\n<ul>\\n    <li>400 PutEvents Requests per second soft limit (soft limit)</li>\\n    <li>10 entries per PutEvents, 256kb per request</li>\\n    <li>750 rule target invocations per second (soft limit)</li>\\n</ul>\";","module.exports = \"<p>\\n    Amazon Kinesis is one of the <strong>only event sources</strong> that integrates directly with AWS Lambda that provides strict ordering guaruntees. It does this in a scalable fashion via sharding and the usage of partition keys to gauruntee ordering of all related records on that partition key.\\n</p>\\n\\n<h3>Key Info & Limits</h3>\\n\\n<ul>\\n    <li>1MB / second / shard</li>\\n    <li>1000 records / second / shard</li>\\n    <li>24 hour data retention (optionally pay more for up to 7 days)</li>\\n    <li>No more than 5 subscribers should be used</li>\\n    <li>Order is only gaurunteed per partition key</li>\\n    <li>Shards do not auto-scale</li>\\n    <li>Number of shards can only be 3 times per 24 hours</li>\\n    <li>Number of shards can only be increased by double or decreased by half.</li>\\n    <li>The AWS Lambda integration polls each shard once per second</li>\\n</ul>\\n\";","module.exports = \"<p>\\n    Amazon Kinesis with Enhanced Fanout is one of the <strong>only event sources</strong> that integrates directly with AWS Lambda that\\n    provides strict ordering guaruntees. It does this in a scalable fashion via sharding and the usage of partition keys\\n    to gauruntee ordering of all related records on that partition key.\\n</p>\\n\\n<p>\\n    The key difference between Amazon Kinesis and Amazon Kinesis with Enhanced Fanout is that the enhanced fanout streams allow you to create additional \\\"replicated\\\" streams so each consumer can get a dedicated pipe to consume with higher performance and the same ordering gauruntees. There is a soft limit of 5 subscribers via enhanced fanouts, which you can open a support ticket to get increased.\\n</p>\\n\\n<h3>Key Info & Limits</h3>\\n\\n<ul>\\n    <li>1MB / second / shard</li>\\n    <li>1000 records / second / shard</li>\\n    <li><i>Soft limit</i> of 5 enhanced fanout consumers</li>\\n    <li>24 hour data retention (optionally pay more for up to 7 days)</li>\\n    <li>Order is only gaurunteed per partition key</li>\\n    <li>Shards do not auto-scale</li>\\n    <li>Number of shards can only be 3 times per 24 hours</li>\\n    <li>Number of shards can only be increased by double or decreased by half.</li>\\n    <li>The AWS Lambda integration polls each shard once per second</li>\\n</ul>\";","module.exports = \"<p>\\n    Tried and true, using Amazon S3 to pass around objects of data is a great practice. Especially with the ability to directly trigger AWS Lambda functions for new or updated objects on the whole bucket, or particular object name matches.\\n</p>\\n\\n<h3>Key Info & Limits</h3>\\n\\n<ul>\\n    <li>1 byte to 5 TB per object</li>\\n    <li>Event delivery in seconds, occasionally minutes</li>\\n    <li>100 subscriber limit</li>\\n    <li>3,500/sec PUTs per prefix</li>\\n    <li>5,500/sec GETs per prefix</li>\\n</ul>\";","module.exports = \"<p>\\n    Amazon SNS is one of most flexible services that integrates natively with AWS Lambda. It allows many subscribers to topics, at high volume, with filtering on message attributes, cross account and cross region integration is possible!\\n</p>\\n\\n<h3>Key Info & Limits</h3>\\n\\n<ul>\\n    <li>12,500,000 subscriptions per topic (soft limit)</li>\\n    <li>100,000 topics per account (soft limit)</li>\\n    <li>200 subscription filters (soft limit)</li>\\n    <li>30,000 publish transactions per second (soft limit)</li>\\n</ul>\\n\";","module.exports = \"<p>\\n    Amazon SQS is the most recent entry to being a natively integrated event source for AWS Lambda. The good news is, the integration is fantastic and let's you process through an SQS queue in a highly parallel and reliable way.\\n</p>\\n\\n<p>\\n    Further, you can piggy back this integration off of SNS and CloudWatch Events, having those integrations send message to an SQS queue and then leveragig the native lambda integration on the queue. This gives you high durability and reliability in the face of downstream system failures.\\n</p>\\n    \\n<h3>Key Info & Limits</h3>\\n\\n<ul>\\n    <li>Cannot use FIFO Queues</li>\\n    <li>120,000 inflight messages (sent to lambda, but not deleted yet)</li>\\n    <li>Up to 14 day message retention</li>\\n    <li>Effectively unlimited TPS</li>\\n    <li>256kb message size limit</li>\\n    <li>12 hour maximum message visibility timeout</li>\\n</ul>\";","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst importAll = require =>\n  require.keys().reduce((acc, next) => {\n    acc[next.replace(\"./\", \"\")] = require(next);\n    return acc;\n  }, {});\n\nconst icons = importAll(\n  require.context(\"../svg\", false, /\\.(png|jpe?g|svg)$/)\n);\n\nfunction Question(props) {\n  let className = \"question\";\n  if (props.icon) {\n    className = \"question-big\";\n  }\n  return (\n    <h2 className={className}>\n      {\n        props.icon && <div style={{ display: \"inline\", verticalAlign: \"middle\", marginRight: \"1rem\" }}>\n          <img style={{ width: \"3rem\", height: \"3rem\" }} src={icons[props.icon]} alt=\"Service Logo\" />\n        </div>\n      }\n      {props.content}\n    </h2>\n  )\n}\n\nQuestion.propTypes = {\n  content: PropTypes.string.isRequired,\n  icon: PropTypes.string\n};\n\nexport default Question;\n","var quizQuestions = {\n    strictOrdering: {\n        question: \"Do you have strict ordering guarantees?\",\n        description: \"Consider financial systems, or other systems where a millisecond of difference is life, death or a lot of money.\",\n        answers: [\n            {\n                content: \"Yes, my business depends on it.\",\n                next: \"manySubscribersKinesis\"\n            },\n            {\n                content: \"No, we can live without.\",\n                next: \"bigData\"\n            }\n        ]\n    },\n    manySubscribersKinesis: {\n        question: \"Do you need to support many subscribers?\",\n        description: \"Sometimes there are completely different parts of an organization interested in working with an event stream for many different reasons!\",\n        answers: [\n            {\n                content: \"Just my services.\",\n                next: \"endKinesis\"\n            },\n            {\n                content: \"Other folks in the company will read & write to the stream\",\n                next: \"endKinesisEnhancedFanout\"\n            }\n        ]\n    },\n    bigData: {\n        question: \"Are your events going to be bigger than 256kb?\",\n        description: \"Generally, many lambda services limit to 256kb, or in some cases 1MB.\",\n        answers: [\n            {\n                content: \"Nope, we keep it reasonable.\",\n                next: \"publicClients\"\n            },\n            {\n                content: \"I have the biggest big data!\",\n                next: \"endS3\"\n            }\n            \n        ]\n    },\n\n    publicClients: {\n        question: \"What about your service clients?\",\n        description:\"\",\n        answers: [\n            {\n                content: \"Internal only. I control all the clients, and everything, with an iron fist.\",\n                next: \"manySubscribers\"\n            },\n            {\n                content: \"We have / need a public endpoint, so let's be secure about it! (Frontend apps, third party calling your api, etc)\",\n                next: \"publicIngress\"\n            }\n        ]\n    },\n\n    manySubscribers: {\n        question: \"Do you need to support hundreds or more subscribers?\",\n        description: \"Sometimes there are completely different parts of an organization interested in working with an event stream for many different reasons!\",\n        answers: [\n            {\n                content: \"Literal millions of subscribers.\",\n                next: \"endSNS\"\n            },\n            {\n                content: \"A few dozen at most.\",\n                next: \"endEventBridge\"\n            }\n        ]\n    },\n\n    publicIngress: {\n        question: \"What does your public access look like?\",\n        answers: [\n            {\n                content: \"A few million requests a month or less, maybe some authorization needs.\",\n                next: \"endAPIGateway\"\n            },\n            {\n                content: \"Crazy high volume (10's of millions to billions).\",\n                next: \"endALB\"\n            }\n        ]\n    },\n\n    // End states\n    endKinesis: {\n        question: \"Amazon Kinesis\",\n        description: \"kinesis.html\",\n        icon: \"kinesis.svg\"\n    },\n    endKinesisEnhancedFanout: {\n        question: \"Amazon Kinesis with Enhanced Fanout\",\n        description: \"kinesisEnhanced.html\",\n        icon: \"kinesis.svg\"\n    },\n    endS3: {\n        question: \"Amazon S3\",\n        description: \"s3.html\",\n        icon: \"s3.svg\"\n    },\n    endAPIGateway: {\n        question: \"Amazon API Gateway\",\n        description: \"apig.html\",\n        icon: \"apig.svg\"\n    },\n    endALB: {\n        question: \"Application Load Balancer\",\n        description: \"alb.html\",\n        icon: \"alb.svg\"\n    },\n    endSNS: {\n        question: \"Simple Notification Service\",\n        description: \"sns.html\",\n        icon: \"sns.svg\"\n    },\n    endEventBridge: {\n        question: \"Amazon EventBridge\",\n        description: \"eventbridge.html\",\n        icon: \"eventbridge.png\"\n    },\n    endSQS: {\n        question: \"Simple Queue Service\",\n        description: \"sqs.html\",\n        icon: \"sqs.svg\"\n    }\n}\n\nexport default quizQuestions;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction AnswerOption(props) {\n  return (\n    <li className=\"answerOption\">\n      <input\n        type=\"radio\"\n        className=\"radioCustomButton\"\n        name=\"radioGroup\"\n        checked={props.next === props.answer}\n        id={props.next}\n        value={props.next}\n        disabled={props.answer}\n        onChange={props.onAnswerSelected}\n      />\n      <label className=\"radioCustomLabel\" htmlFor={props.next}>\n        {props.answerContent}\n      </label>\n    </li>\n  );\n}\n\nAnswerOption.propTypes = {\n  answerContent: PropTypes.string.isRequired,\n  answer: PropTypes.string.isRequired,\n  onAnswerSelected: PropTypes.func.isRequired,\n  next: PropTypes.string.isRequired\n};\n\nexport default AnswerOption;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { CSSTransitionGroup } from 'react-transition-group';\nimport Question from '../components/Question';\nimport AnswerOption from '../components/AnswerOption';\n\n\nconst importAll = require =>\n  require.keys().reduce((acc, next) => {\n    acc[next.replace(\"./\", \"\")] = require(next);\n    return acc;\n  }, {});\n\nconst services = importAll(\n  require.context(\"../api/services\", false, /\\.(html)$/)\n);\n\nfunction Quiz(props) {\n  function renderAnswerOptions(key) {\n    return (\n      <AnswerOption\n        key={key.content}\n        answerContent={key.content}\n        next={key.next}\n        answer={props.answer}\n        questionId={props.questionId}\n        onAnswerSelected={props.onAnswerSelected}\n      />\n    );\n  }\n\n  return (\n    <CSSTransitionGroup\n      className=\"container\"\n      component=\"div\"\n      transitionName=\"fade\"\n      transitionEnterTimeout={800}\n      transitionLeaveTimeout={500}\n      transitionAppear\n      transitionAppearTimeout={500}\n    >\n      <div key={props.questionId}>\n        \n        <Question icon={props.icon} content={props.question || props.header} />\n        <div className=\"description\" dangerouslySetInnerHTML={{__html: services[props.description] || props.description}}></div>\n        {\n          props.answerOptions && <ul className=\"answerOptions\">\n            {props.answerOptions.map(renderAnswerOptions)}\n          </ul>\n        }\n\n      </div>\n    </CSSTransitionGroup>\n  );\n}\n\nQuiz.propTypes = {\n  answer: PropTypes.string.isRequired,\n  answerOptions: PropTypes.array.isRequired,\n  question: PropTypes.string.isRequired,\n  questionId: PropTypes.string.isRequired,\n  onAnswerSelected: PropTypes.func.isRequired,\n  icon: PropTypes.string,\n};\n\nexport default Quiz;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { CSSTransitionGroup } from 'react-transition-group';\n\nfunction Result(props) {\n  return (\n    <CSSTransitionGroup\n      className=\"container result\"\n      component=\"div\"\n      transitionName=\"fade\"\n      transitionEnterTimeout={800}\n      transitionLeaveTimeout={500}\n      transitionAppear\n      transitionAppearTimeout={500}\n    >\n      <div>\n        You prefer <strong>{props.quizResult}</strong>!\n      </div>\n    </CSSTransitionGroup>\n  );\n}\n\nResult.propTypes = {\n  quizResult: PropTypes.string.isRequired\n};\n\nexport default Result;\n","import React, { Component } from 'react';\nimport quizQuestions from './api/quizQuestions';\nimport Quiz from './components/Quiz';\nimport Result from './components/Result';\nimport './App.css';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      questionId: \"strictOrdering\",\n      question: '',\n      description: '',\n      answerOptions: [],\n      answer: '',\n      result: ''\n    };\n\n    this.handleAnswerSelected = this.handleAnswerSelected.bind(this);\n  }\n\n  componentWillMount() {\n    this.setState({\n      question: quizQuestions[this.state.questionId].question,\n      description: quizQuestions[this.state.questionId].description,\n      answerOptions: quizQuestions[this.state.questionId].answers\n    });\n  }\n\n  handleAnswerSelected(event) {\n    console.log(event.currentTarget.value)\n    this.setUserAnswer(event.currentTarget.value);\n    setTimeout(() => this.setNextQuestion(), 300);\n  }\n\n  setUserAnswer(answer) {\n    this.setState((state, props) => ({\n      answer: answer\n    }));\n  }\n\n  setNextQuestion() {\n    this.setState({\n      questionId: this.state.answer,\n      question: quizQuestions[this.state.answer].question,\n      description: quizQuestions[this.state.answer].description,\n      answerOptions: quizQuestions[this.state.answer].answers,\n      icon: quizQuestions[this.state.answer].icon || null,\n      answer: ''\n    });\n  }\n\n  getResults() {\n    const answersCount = this.state.answersCount;\n    const answersCountKeys = Object.keys(answersCount);\n    const answersCountValues = answersCountKeys.map(key => answersCount[key]);\n    const maxAnswerCount = Math.max.apply(null, answersCountValues);\n\n    return answersCountKeys.filter(key => answersCount[key] === maxAnswerCount);\n  }\n\n  setResults(result) {\n    if (result.length === 1) {\n      this.setState({ result: result[0] });\n    } else {\n      this.setState({ result: 'Undetermined' });\n    }\n  }\n\n  renderQuiz() {\n    return (\n      <Quiz\n        answer={this.state.answer}\n        answerOptions={this.state.answerOptions}\n        description={this.state.description}\n        questionId={this.state.questionId}\n        question={this.state.question}\n        questionTotal={quizQuestions.length}\n        onAnswerSelected={this.handleAnswerSelected}\n        icon={this.state.icon}\n      />\n    );\n  }\n\n  renderResult() {\n    return <Result quizResult={this.state.result} />;\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <div className=\"App-header\">\n          <h2>Which AWS event source should I use?</h2>\n        </div>\n        {this.state.result ? this.renderResult() : this.renderQuiz()}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}